--https://www.youtube.com/watch?v=w84uFSwulBI
--https://www.youtube.com/watch?v=Cm2psU-zN90

-RabbitMq.Client

-you can run the .exe file in the bin folder to run the project in release
1. Create Producer

{
    var myQueue = "MX_Rabbit_Demo";
    var rabbitUrl = "amqp://dev:qfEzvoWeNFMAX82I9jos@172.27.215.81:5672/dev";

    var factory = new ConnectionFactory()   //Create connection factory
    {
        Uri = new Uri(rabbitUrl)
    };

    using var connection = factory.CreateConnection();  //Create connection
    using var channel = connection.CreateModel();    //Create Channel

    channel.QueueDeclare(myQueue,   //Create Queue
        durable: true,
        exclusive: false,
        autoDelete:false,
        arguments: null
        );

    var message = new { Name = "Producer", Message = "I'm producing on Rabbit" };

    var body = Encoding.UTF8.GetBytes(JsonConvert.SerializeObject(message));  // convert message to byte array

    channel.BasicPublish("", myQueue, null, body);  // publish message

    Console.WriteLine($"{message} has been published");
    Console.ReadLine();
}


2. Create Consumer

{
    var myQueue = "MX_Rabbit_Demo";
    var rabbitUrl = "amqp://dev:qfEzvoWeNFMAX82I9jos@172.27.215.81:5672/dev";

    var factory = new ConnectionFactory()   //Create connection factory
    {
        Uri = new Uri(rabbitUrl)
    };

    using var connection = factory.CreateConnection();  //Create connection
    using var channel = connection.CreateModel();    //Create Channel

    channel.QueueDeclare(myQueue,   //Create Queue
        durable: true,
        exclusive: false,
        autoDelete: false,
        arguments: null
        );

    var consumer = new EventingBasicConsumer(channel);  // Create consumer

    string consumedMessage = "";

    consumer.Received += (sender, e) =>
    {
        var body = e.Body.ToArray();  // Get Body as byte array
        var message = Encoding.UTF8.GetString(body); // convert message to string

        consumedMessage = message;

        Console.WriteLine(message);
    };

    channel.BasicConsume(myQueue, true, consumer);

    Console.WriteLine($"{consumedMessage} was consumed");
    Console.ReadLine();
}
